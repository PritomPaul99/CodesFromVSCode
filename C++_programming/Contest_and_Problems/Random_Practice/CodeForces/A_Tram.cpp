/*************************************************************************************************
*                                           Written by:                                          *
*   ______________   ______________   _____   ______________   ______________   _            _   *
*  |  __________  | |  __________  | |_   _| |_____   ______| |  __________  | |  \        /  |  *
*  | |          | | | |          | |   | |         | |        | |          | | | |\\      //| |  *
*  | |          | | | |          | |   | |         | |        | |          | | | | \\    // | |  *
*  | |__________| | | |__________| |   | |         | |        | |          | | | |  \\  //  | |  *
*  |  ____________| |  ___  _______|   | |         | |        | |          | | | |   \\//   | |  *
*  | |              | |   \ \          | |         | |        | |          | | | |    \/    | |  *
*  | |              | |    \ \         | |         | |        | |          | | | |          | |  *
*  | |              | |     \ \____   _| |_        | |        | |__________| | | |          | |  *
*  |_|              |_|      \_____| |_____|       |_|        |______________| |_|          |_|  *
*                                                                                                *
*                                             -NEUB-                                             *
*                         Depertment of Computer Science and Engineering                         *
*************************************************************************************************/


#include <bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    int exit[1000], enter[1000];
    int count, count2;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> exit[i] >> enter[i];
    }
    count2 = 0;
    for (int i = 0; i < n - 1; i++)
    {

        count = (enter[i] - exit[i + 1]) + enter[i + 1];
        if (count > count2)
        {
            count2 = count;
        }
        enter[i + 1] = count;
    }
    cout << count2;
}